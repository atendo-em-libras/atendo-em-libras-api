buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.flywaydb.flyway" version "6.5.3"
}

group = 'com.atendo-em-libras'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.flywaydb:flyway-core"
    compile "org.postgresql:postgresql:42.2.5"
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"

    developmentOnly "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    
    testCompile "org.mockito:mockito-core:3.11.2"
    testCompile 'org.junit.jupiter:junit-jupiter:5.7.2'

}

repositories {
    mavenCentral()
}

bootRun {
    doFirst {
        systemProperty "spring.profiles.active", "dev"
    }
}

task loadSeedData(type: Exec) {
  workingDir 'src/main/resources/db'
  commandLine 'sh', './load_sql_file.sh', 'sample_data.sql'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}
